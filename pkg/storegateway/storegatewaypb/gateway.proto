syntax = "proto3";
package gatewaypb;

import "github.com/thanos-io/thanos/pkg/store/storepb/rpc.proto";
import "github.com/cortexproject/cortex/pkg/cortexpb/cortex.proto";

option go_package = "storegatewaypb";

service StoreGateway {
    // Series streams each Series for given label matchers and time range.
    //
    // Series should strictly stream full series after series, optionally split by time. This means that a single frame can contain
    // partition of the single series, but once a new series is started to be streamed it means that no more data will
    // be sent for previous one.
    //
    // Series are sorted.
    rpc Series(thanos.SeriesRequest) returns (stream thanos.SeriesResponse);

    // LabelNames returns all label names that is available.
    rpc LabelNames(thanos.LabelNamesRequest) returns (thanos.LabelNamesResponse);

    // LabelValues returns all label values for given label name.
    rpc LabelValues(thanos.LabelValuesRequest) returns (thanos.LabelValuesResponse);

    rpc Query(QueryRequest) returns (stream QueryResponse);

    rpc QueryRange(QueryRangeRequest) returns (stream QueryRangeResponse);
}

message QueryRequest {
    string query = 1;

    int64 time_seconds = 2;
    int64 timeout_seconds = 3;

    int64 lookback_delta_seconds = 4;
    repeated string blockIDs = 5;
}

message QueryResponse {
    oneof result {
        /// warnings are additional messages coming from the PromQL engine.
        string warnings = 1;

        /// timeseries is one series from the result of the executed query.
        cortexpb.TimeSeries timeseries = 2;
    }
}

message QueryRangeRequest {
    string query = 1;

    int64 start_time_seconds = 2;
    int64 end_time_seconds = 3;
    int64 interval_seconds = 4;

    int64 timeout_seconds = 5;
    int64 lookback_delta_seconds = 6;
    repeated string blockIDs = 7;
}

message QueryRangeResponse {
    oneof result {
        /// warnings are additional messages coming from the PromQL engine.
        string warnings = 1;

        /// timeseries is one series from the result of the executed query.
        cortexpb.TimeSeries timeseries = 2;
    }
}
